name: Specific job to test the loginSuccessUrl case, because we need to set some special env vars that are only implemented for the nextjs web2 example.

on:
  workflow_call:
    secrets:
      CLIENT_ID:
        required: true
      AUTH_SERVER:
        required: true
      GH_PAT:
        required: true
      CYPRESS_RECORD_KEY:
        required: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CYPRESS_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      AUTH_SERVER: ${{ secrets.AUTH_SERVER }}
      LOGIN_SUCCESS_URL: "/customSuccessRoute"
    defaults:
      run:
        working-directory: packages/civic-auth/nextjs
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Cache Yarn packages
        uses: actions/cache@v4
        with:
          path: packages/civic-auth/nextjs/node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles(format('{0}/yarn.lock', 'packages/civic-auth/nextjs')) }}-${{ hashFiles(format('{0}/package.json', 'packages/civic-auth/nextjs')) }}

      - name: Yarn install with latest Civic packages
        run: |
          # Function to get latest version (comparing stable vs beta)
          get_latest_version() {
            local pkg=$1
            local beta_version=$(npm view ${pkg}@beta version 2>/dev/null || echo "0.0.0")
            local stable_version=$(npm view ${pkg} version 2>/dev/null || echo "0.0.0")
            local beta_base=$(echo $beta_version | sed 's/-beta.*//')
            
            # Use beta if its base version is higher than stable
            if [[ $(echo -e "$beta_base\n$stable_version" | sort -V | tail -n 1) == "$beta_base" && "$beta_base" != "$stable_version" ]]; then
              echo "${pkg}@${beta_version}"
            else
              echo "${pkg}@${stable_version}"
            fi
          }
          
          # Check which Civic packages are dependencies and install latest versions
          if grep -q '"@civic/auth"' package.json; then
            auth_pkg=$(get_latest_version "@civic/auth")
            echo "Installing $auth_pkg"
            yarn add "$auth_pkg"
          fi
          
          if grep -q '"@civic/auth-web3"' package.json; then
            web3_pkg=$(get_latest_version "@civic/auth-web3")
            echo "Installing $web3_pkg"
            yarn add "$web3_pkg"
          fi
          
          # Install remaining dependencies
          yarn install

      - name: Yarn build
        run: yarn build

      - name: Start App
        run: yarn start &

      - name: Wait for app to start
        run: npx wait-on http-get://localhost:3000 --timeout 300000

      - name: Run Cypress Tests
        id: cypress
        uses: cypress-io/github-action@v6
        with:
          working-directory: packages/e2e
          spec: cypress/e2e/features/example-apps/nextjs-loginSuccessUrl.feature
          browser: chrome
          install: true
          record: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}