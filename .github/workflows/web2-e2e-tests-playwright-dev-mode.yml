name: Civic Auth Example Apps - E2E Tests (Dev Mode)

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      publish-allure-to-pages:
        description: 'Publish Allure reports to GitHub Pages'
        required: false
        default: false
        type: boolean
    
jobs:
  check-version:
    uses: ./.github/workflows/check-versions.yml

  job-nextjs-example-app:
    name: "NextJS example app"
    needs: check-version
    uses: ./.github/workflows/test-example-app-playwright.yml
    with:
      project-path: packages/civic-auth/nextjs
      playwright-spec: "playwright/tests/civic-auth/login/nextjs-login.spec.ts playwright/tests/civic-auth/email/nextjs-email-verification.spec.ts playwright/tests/civic-auth/refresh/nextjs-refresh-token.spec.ts playwright/tests/civic-auth/staleSession/nextjs-stale-session.spec.ts playwright/tests/civic-auth/rehydration/nextjs-session-rehydration.spec.ts"
      browser: webkit
      job-name: "üöÄ NextJS App (Login + Email + Refresh + Stale Session + Rehydration)"
      workflow-identifier: "dev-mode"
    secrets: inherit

  job-nextjs-basepath-example-app:
    name: "NextJS basepath example app"
    needs: check-version
    uses: ./.github/workflows/test-example-app-playwright.yml
    with:
      project-path: packages/civic-auth/nextjs
      playwright-spec: "playwright/tests/civic-auth/basePath/nextjs-login.spec.ts"
      build-command: "yarn build"
      dev-command: "yarn dev:subpath"
      browser: webkit
      job-name: "üöÄ NextJS App (Basepath)"
      workflow-identifier: "dev-mode"
    secrets: inherit

  job-nextjs-loginsuccessurl-example-app:
    name: "NextJS loginSuccessUrl example app"
    needs: check-version
    uses: ./.github/workflows/test-example-app-playwright.yml
    with:
      project-path: packages/civic-auth/nextjs
      playwright-spec: "playwright/tests/civic-auth/loginSuccessUrl/nextjs-login.spec.ts"
      build-command: "yarn build"
      dev-command: "yarn dev:loginSuccessUrl"
      browser: webkit
      job-name: "üöÄ NextJS App (LoginSuccessUrl)"
      workflow-identifier: "dev-mode"
    secrets: inherit

  job-express-loginsuccessurl-example-app:
    name: "Express loginSuccessUrl example app"
    needs: check-version
    uses: ./.github/workflows/test-example-app-playwright.yml
    with:
      project-path: packages/civic-auth/server/express
      playwright-spec: "playwright/tests/civic-auth/loginSuccessUrl/express-login.spec.ts"
      build-command: "yarn build"
      dev-command: "yarn dev:loginSuccessUrl"
      browser: webkit
      job-name: "üõ†Ô∏è Express Server (LoginSuccessUrl)"
      workflow-identifier: "dev-mode"
    secrets: inherit

  job-fastify-loginsuccessurl-example-app:
    name: "Fastify loginSuccessUrl example app"
    needs: check-version
    uses: ./.github/workflows/test-example-app-playwright.yml
    with:
      project-path: packages/civic-auth/server/fastify
      playwright-spec: "playwright/tests/civic-auth/loginSuccessUrl/fastify-login.spec.ts"
      build-command: "yarn build"
      dev-command: "yarn dev:loginSuccessUrl"
      browser: webkit
      job-name: "‚ö° Fastify Server (LoginSuccessUrl)"
      workflow-identifier: "dev-mode"
    secrets: inherit

  job-hono-loginsuccessurl-example-app:
    name: "Hono loginSuccessUrl example app"
    needs: check-version
    uses: ./.github/workflows/test-example-app-playwright.yml
    with:
      project-path: packages/civic-auth/server/hono
      playwright-spec: "playwright/tests/civic-auth/loginSuccessUrl/hono-login.spec.ts"
      build-command: "yarn build"
      dev-command: "yarn dev:loginSuccessUrl"
      browser: webkit
      job-name: "üî• Hono Server (LoginSuccessUrl)"
      workflow-identifier: "dev-mode"
    secrets: inherit

  job-reactjs-example-app:
    name: "ReactJS example app"
    needs: check-version
    uses: ./.github/workflows/test-example-app-playwright.yml
    with:
      project-path: packages/civic-auth/reactjs
      playwright-spec: "playwright/tests/civic-auth/login/reactjs-login.spec.ts playwright/tests/civic-auth/email/reactjs-email-verification.spec.ts"
      browser: webkit
      job-name: "‚öõÔ∏è ReactJS App (Login + Email)"
      workflow-identifier: "dev-mode"
    secrets: inherit

  job-express-example-app:
    name: "Express example app"
    needs: check-version
    uses: ./.github/workflows/test-example-app-playwright.yml
    with:
      project-path: packages/civic-auth/server/express
      playwright-spec: "playwright/tests/civic-auth/login/express-login.spec.ts playwright/tests/civic-auth/email/express-email-verification.spec.ts"
      browser: webkit
      job-name: "üõ†Ô∏è Express Server (Login + Email)"
      workflow-identifier: "dev-mode"
    secrets: inherit

  job-fastify-example-app:
    name: "Fastify example app"
    needs: check-version
    uses: ./.github/workflows/test-example-app-playwright.yml
    with:
      project-path: packages/civic-auth/server/fastify
      playwright-spec: "playwright/tests/civic-auth/login/fastify-login.spec.ts playwright/tests/civic-auth/email/fastify-email-verification.spec.ts"
      browser: webkit
      job-name: "‚ö° Fastify Server (Login + Email)"
      workflow-identifier: "dev-mode"
    secrets: inherit

  job-hono-example-app:
    name: "Hono example app"
    needs: check-version
    uses: ./.github/workflows/test-example-app-playwright.yml
    with:
      project-path: packages/civic-auth/server/hono
      playwright-spec: "playwright/tests/civic-auth/login/hono-login.spec.ts playwright/tests/civic-auth/email/hono-email-verification.spec.ts"
      browser: webkit
      job-name: "üî• Hono Server (Login + Email)"
      workflow-identifier: "dev-mode"
    secrets: inherit

  job-vanillajs-example-app:
    name: "VanillaJS example app"
    needs: check-version
    uses: ./.github/workflows/test-example-app-playwright.yml
    with:
      project-path: packages/civic-auth/vanillajs
      playwright-spec: "playwright/tests/civic-auth/login/vanillajs-login.spec.ts playwright/tests/civic-auth/email/vanillajs-email-verification.spec.ts playwright/tests/civic-auth/refresh/vanillajs-refresh-token.spec.ts playwright/tests/civic-auth/staleSession/vanillajs-stale-session.spec.ts playwright/tests/civic-auth/rehydration/vanillajs-session-rehydration.spec.ts"
      browser: webkit
      job-name: "üì¶ VanillaJS App (Login + Email + Refresh + Stale Session + Rehydration)"
      workflow-identifier: "dev-mode"
    secrets: inherit

  job-vanillajs-modal-example-app:
    name: "VanillaJS Modal example app"
    needs: check-version
    uses: ./.github/workflows/test-example-app-playwright.yml
    with:
      project-path: packages/civic-auth/vanillajs
      playwright-spec: "playwright/tests/civic-auth/login/vanillajs-modal-login.spec.ts playwright/tests/civic-auth/refresh/vanillajs-modal-refresh-token.spec.ts"
      browser: webkit
      job-name: "üì¶ VanillaJS Modal App (Login + Refresh)"
      workflow-identifier: "dev-mode"
    secrets: inherit



  publish-allure-reports:
    name: "Publish Web2 Allure Reports"
    needs: [
      job-nextjs-example-app,
      job-nextjs-basepath-example-app,
      job-nextjs-loginsuccessurl-example-app,
      job-express-loginsuccessurl-example-app,
      job-fastify-loginsuccessurl-example-app,
      job-hono-loginsuccessurl-example-app,
      job-reactjs-example-app,
      job-express-example-app,
      job-fastify-example-app,
      job-hono-example-app,
      job-vanillajs-example-app,
      job-vanillajs-modal-example-app,
    ]
    
    runs-on: ubuntu-latest
    if: always()
    permissions:
      contents: write
      actions: read
      id-token: write
      pages: write
    steps:
      - name: Download Allure Results
        uses: actions/download-artifact@v4
        with:
          pattern: allure-results-*
          merge-multiple: true
          path: allure-results

      - name: Load test report history
        if: always()
        continue-on-error: true
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: Copy existing history to test results
        if: always()
        run: |
          echo "Copying existing history to test results directory..."
          if [ -d "allure-report/history" ]; then
            echo "Found history in allure-report/history"
            cp -r allure-report/history allure-results/
            echo "History copied successfully"
          elif [ -d "allure-results/history" ]; then
            echo "Found history in allure-results/history"
            cp -r allure-results/history allure-results/
            echo "History copied successfully"
          elif [ -d "allure-history/history" ]; then
            echo "Found history in allure-history/history"
            cp -r allure-history/history allure-results/
            echo "History copied successfully"
          else
            echo "No existing history found, will create new"
            mkdir -p allure-results/history
          fi

      - name: Build test report
        if: always()
        uses: simple-elf/allure-report-action@v1.7
        with:
          allure_results: allure-results
          allure_history: allure-history
          keep_reports: 5

      - name: Upload built report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: web2-dev-mode-allure-report
          path: allure-history/
          retention-days: 5